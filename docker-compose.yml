version: '3'
services:
    dvwa:
      image: docker.io/vulnerables/web-dvwa
      container_name: dvwa
      ports:
        - "4380:80"
        - "443"
      networks:
        mynet:
          ipv4_address: 192.168.0.40 

    ips:
      image: docker.io/linton/docker-snort
      command: snort -i eno1 -A unsock -l /var/log/snort/ -c /etc/snort/etc/snort.conf
      volumes:
        - ./ips/snort-logs:/var/log/snort
        - ./ips/snort-rules/snort.rules:/etc/snort/rules/local.rules
      restart: always
      network_mode: "host"
      cap_add:
        - NET_ADMIN
      privileged: true
      container_name: ips

    ids1:
      container_name: ids1
      image: owasp/modsecurity-crs:nginx
      user: root
      environment:
        SERVERNAME: modsec3-nginx
        BACKEND: http://192.168.0.40
        PORT: "81"
        MODSEC_RULE_ENGINE: "On"
        PARANOIA: 4
        TZ: "${TZ}"
        ERRORLOG: "/var/log/error.log"
        LOGLEVEL: "info"
        ACCESSLOG: "/var/log/access.log"
        MODSEC_AUDIT_LOG_FORMAT: Native
        MODSEC_AUDIT_LOG_TYPE: Serial
        MODSEC_AUDIT_LOG: "/var/log/modsec_audit.log"
        MODSEC_RESP_BODY_ACCESS: "On"
        MODSEC_RESP_BODY_MIMETYPE: "text/plain text/html text/xml application/json"
        COMBINED_FILE_SIZES: "65535"
        CRS_ENABLE_TEST_MARKER: 1
      volumes:
        - ./ids1/logs:/var/log/nginx:rw
        - ./ids1/rules:/opt/owasp-crs/rules:ro
        - ./ids1/crs-setup.conf.example:/etc/modsecurity.d/owasp-crs/crs-setup.conf.example
        - ./ids1/etc/conf.d/nginx.conf.bak:/etc/nginx/conf.d/my.conf

      command: ["nginx", "-g", "daemon off;"]
      ports:
        - "9000:80"
        - "9001:81"
        - "14444:4443"
      networks:
        mynet:
          ipv4_address: 192.168.30.50

      depends_on:
        - dvwa
        - web1
        - web2

    ids2:
      container_name: ids2
      image: owasp/modsecurity-crs:nginx
      user: root
      environment:
        SERVERNAME: modsec3-nginx
        BACKEND: http://192.168.0.40
        PORT: "81"
        MODSEC_RULE_ENGINE: "On"
        PARANOIA: 4
        TZ: "${TZ}"
        ERRORLOG: "/var/log/error.log"
        LOGLEVEL: "info"
        ACCESSLOG: "/var/log/access.log"
        MODSEC_AUDIT_LOG_FORMAT: Native
        MODSEC_AUDIT_LOG_TYPE: Serial
        MODSEC_AUDIT_LOG: "/var/log/modsec_audit.log"
        MODSEC_RESP_BODY_ACCESS: "On"
        MODSEC_RESP_BODY_MIMETYPE: "text/plain text/html text/xml application/json"
        COMBINED_FILE_SIZES: "65535"
        CRS_ENABLE_TEST_MARKER: 1
      volumes:
        - ./ids2/logs:/var/log/nginx:rw
        - ./ids2/rules:/opt/owasp-crs/rules:ro
        - ./ids2/crs-setup.conf.example:/etc/modsecurity.d/owasp-crs/crs-setup.conf.example
        - ./ids2/etc/conf.d/nginx.conf.bak:/etc/nginx/conf.d/my.conf
      command: ["nginx", "-g", "daemon off;"]
      ports:
        - "9002:80"
        - "9003:81"
        - "14445:4443"
      networks:
        mynet:
          ipv4_address: 192.168.30.51
      depends_on:
        - dvwa
        - web1
        - web2

    backend:
      container_name: backend
      image: docker.io/kennethreitz/httpbin
      ports:
        - "80"
      networks:
        mynet:
          ipv4_address: 192.168.30.52

    jenkins:
      build: jenkins
      container_name: jenkins
      volumes: 
        - ./var/jenkins_home:/var/jenkins_home
        - ./var/run:/var/run:ro
        - ./ssh:/root/.ssh/
      environment:
        - TZ=Asia/Seoul
      ports:
        - "18080:8080"
        - "50000:50000"
        - "18081:8081"
      privileged: true
      user: root
      networks:
        mynet:
          ipv4_address: 192.168.10.100

    dns:
      build: dns
      ports:
        - "5300:53/udp"
        - "5300:53/tcp"
        - "10000:10000/tcp"
      volumes:
        - ./dns/etc/named.conf.options:/etc/bind/named.conf.options
        - ./dns/etc/named.conf.local:/etc/bind/named.conf.local
        - ./dns/etc/ghkdtlwns987.com.zone:/var/cache/bind/ghkdtlwns987.com.zone
        - ./dns/etc/ghkdtlwns987.com.zone.rev:/var/cache/bind/ghkdtlwns987.com.zone.rev
      networks:
        mynet:
          ipv4_address: 192.168.0.100
      stdin_open: true
      tty: true
      privileged: true
      user: root
      container_name: dns
      hostname: ghkdtlwns987

    web1:
      build: web1
      tty: true
      privileged: true
      user: root
      ports:
        - "4430:80/tcp"
        - "4430:80/udp"
        - "8081:8081"
      container_name: web1
      hostname: web1
      networks:
      volumes:
        - ./ssh/id_rsa.pub:/root/.ssh/authorized_keys
      networks:
        mynet:
          ipv4_address: 192.168.0.10

    web2:
      build: web2
      tty: true
      privileged: true
      user: root
      ports:
        - "4431:80/tcp"
        - "4431:80/udp"
        - "8082:8081"

      container_name: web2
      hostname: web2
      volumes:
        - ./ssh/id_rsa.pub:/root/.ssh/authorized_keys
      networks:
        mynet:
          ipv4_address: 192.168.0.11


    db1:
      build: db1
      restart: always
      stdin_open: true
      tty: true
      privileged: true
      user: root
      ports:
        - "13306:3306"

      container_name: db1
      hostname: db1
      command:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
      environment:
        MYSQL_DATABASE: db1
        MYSQL_USER: 'user'
        MYSQL_USER_PASSWORD: 'root'
        MYSQL_ROOT_PASSWORD: 'root'
        TZ: Asia/Seoul

      networks:
        mynet:
          ipv4_address: 192.168.0.20

    db2:
      build: db2
      restart: always
      tty: true
      privileged: true
      user: root
      ports:
        - "13307:3306"

      container_name: db2
      hostname: db2
      command:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
      environment:
        MYSQL_DATABASE: 'db2'
        MYSQL_USER: 'user'
        MYSQL_USER_PASSWORD: 'root'
        MYSQL_ROOT_PASSWORD: 'root'

        TZ: Asia/Seoul

      networks:
        mynet:
          ipv4_address: 192.168.0.21

networks:
  mynet:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1
